//ros
#include "ros/ros.h"
#include "geometry_msgs/Twist.h"
#include "geometry_msgs/Point.h"
#include <sstream>
#include <boost/thread/thread.hpp>

//udp
#include <stdio.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <unistd.h>
#include <errno.h>
#include <string.h>
#include <stdlib.h>
#include <iostream>
#include <arpa/inet.h>
class UdpServer
{
public:
UdpServer(ros::NodeHandle &nh, uint16_t server_port, int robot_id);//构造函数
~UdpServer();
private:
//ros
ros::Rate rate(10);
ros::Publisher pos_pub;
ros::Subscriber carVelSub;
geometry_msgs::Twist carVel;
int zeroCount;
short lastvx, lastvy, lastva;
short vx, vy, va;
double velx, vely, vela;
ros::Time carVelTime;
int ACCEPTTIME;

void carVelCallback(const geometry_msgs::Twist::ConstPtr& msg);

void getCarVel();
void velFilter(short &vx, short &vy, short &va, int &count, short &lastvx, short &lastvy, short &lastva);
void genCmd(char* cmdData, short vx, short vy, short va)


//udp
int sock_fd;
struct sockaddr_in addr_serv;
int len;
int recv_num;
int send_num;
char send_buf[1024];
char recv_buf[1024];
struct sockaddr_in addr_client;


}
