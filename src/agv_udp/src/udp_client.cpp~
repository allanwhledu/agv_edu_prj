#include <stdio.h>  
#include <string.h>  
#include <sys/types.h>  
#include <sys/socket.h>  
#include <netinet/in.h>  
#include <arpa/inet.h>  
#include <unistd.h>  
 
#define BUFFSIZE 1024
 
int main(int argc, char *argv[])
{
    int len = 0;
    struct sockaddr_in server_addr;
    socklen_t sin_size = 0;
    char buf[BUFFSIZE] = {0};
    bzero(&server_addr, sizeof(struct sockaddr_in));
    server_addr.sin_family = AF_INET;
    server_addr.sin_addr.s_addr = inet_addr("192.168.1.95");
    server_addr.sin_port = htons(7838);
 
    if((client_sockfd = socket(AF_INET, SOCK_DGRAM, 0)) < 0)
    {
        perror("socket error!\n");
        return -1;
    }
 
    sin_size = sizeof(struct sockaddr_in);
    
    while(1)
    {
/*
        //receive
        len = recvfrom(server_sockfd, buf, BUFFSIZE, 0, (struct sockaddr *) &client_addr, &sin_size);
        if(len < 0)
        {
            perror("recvfrom error!\n");
            return -1;
        }
 
        printf("recv from: %s\n",inet_ntoa(client_addr.sin_addr));
        buf[len] = '\0';
        printf("recv is: %s\n",buf);
        if(len <= 0)
        {
            break;
        }
	//send

        scanf("%s",buf);
        if(!strcmp(buf,"quit"))
        {
            break;
        }
        
        if((len = sendto(client_sockfd, buf, strlen(buf), 0 ,(struct sockaddr*)&server_addr, sizeof(struct sockaddr))) < 0)
        {
            perror("sendto fail!\n");
            return -1;
        }

*/
    }
 
    close(client_sockfd);
 
    return 0;
}
